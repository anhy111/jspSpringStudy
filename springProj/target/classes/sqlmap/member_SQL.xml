<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.MemMapper">

	<sql id="where">
		<!-- 통합검색 -->
	   	AND (MEM_ID LIKE '%' || #{keyword} || '%' 
	    OR  MEM_NAME LIKE '%' || #{keyword} || '%'
	    OR  MEM_JOB LIKE '%' || #{keyword} || '%'
	    OR  MEM_LIKE LIKE '%' || #{keyword} || '%'
	    OR  MEM_HP LIKE '%' || #{keyword} || '%')
	</sql>
	
	<resultMap type="memVO" id="memAttachMap">
		<id property="memId" column="MEM_ID" />
		<result property="memPass" column="MEM_PASS" />
		<result property="memName" column="MEM_NAME" />
		<result property="memRegno1" column="MEM_REGNO1" />
		<result property="memRegno2" column="MEM_REGNO2" />
		<result property="memBir" column="MEM_BIR" />
		<result property="memZip" column="MEM_ZIP" />
		<result property="memAdd1" column="MEM_ADD1" />
		<result property="memAdd2" column="MEM_ADD2" />
		<result property="memHometel" column="MEM_HOMETEL" />
		<result property="memComtel" column="MEM_COMTEL" />
		<result property="memHp" column="MEM_HP" />
		<result property="memMail" column="MEM_MAIL" />
		<result property="memJob" column="MEM_JOB" />
		<result property="memLike" column="MEM_LIKE" />
		<result property="memMemorial" column="MEM_MEMORIAL" />
		<result property="memMemorialday" column="MEM_MEMORIALDAY" />
		<result property="memMileage" column="MEM_MILEAGE" />
		<result property="memDelete" column="MEM_DELETE" />
		<result property="filename" column="FILENAME" />
		<collection property="attachVOList" resultMap="attachMap" />
	</resultMap>
	
	<resultMap type="attachVO" id="attachMap">
		<id property="seq" column="SEQ"/>
		<id property="tid" column="TID"/>
		<result property="attachName" column="ATTACH_NAME"/>
	</resultMap>
		
	<select id="list" parameterType="hashMap" resultType="memVO">
		WITH T AS(
		    SELECT ROW_NUMBER() OVER (ORDER BY MEM_ID ASC) RNUM
		         , MEM_ID, MEM_NAME, MEM_JOB, MEM_LIKE, MEM_HP
		    FROM MEMBER
		    WHERE 1 = 1
		    <if test="keyword!=null and keyword!=''">
		    	<include refid="where"></include>
		    </if>
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN #{currentPage} * #{show} - (#{show}-1) AND #{currentPage} * #{show}
	</select>
	
	<select id="getTotal" parameterType="hashMap" resultType="int">
		select count(*) from member
		where 1 = 1
	 	<if test="keyword!=null and keyword!=''">
			<include refid="where"></include>
		</if>
	</select>
	
	<select id="existMem" parameterType="memVO" resultType="int">
		select count(*)
		from member
		where 
			mem_id = #{memId}
	</select>
	
	<insert id="insertMem" parameterType="memVO">
		INSERT
		    INTO member (
		        mem_id,
		        mem_pass,
		        mem_name,
		        mem_job,
		        mem_like,
		        mem_hp
		    )
		VALUES (
		       #{memId},
		       #{memPass},
		       #{memName},
		       #{memJob},
		       #{memLike},
		       #{memHp}
		)
	</insert>
	<select id="detail" parameterType="String" resultMap="memAttachMap">
		SELECT
		    M.MEM_ID,
		    M.MEM_PASS,
		    M.MEM_NAME,
		    M.MEM_REGNO1,
		    M.MEM_REGNO2,
		    M.MEM_BIR,
		    M.MEM_ZIP,
		    M.MEM_ADD1,
		    M.MEM_ADD2,
		    M.MEM_HOMETEL,
		    M.MEM_COMTEL,
		    M.MEM_HP,
		    M.MEM_MAIL,
		    M.MEM_JOB,
		    M.MEM_LIKE,
		    M.MEM_MEMORIAL,
		    M.MEM_MEMORIALDAY,
		    M.MEM_MILEAGE,
		    M.MEM_DELETE,
		    M.FILENAME,
		    A.SEQ,
		    A.TID,
		    A.ATTACH_NAME
		FROM
		    MEMBER M LEFT OUTER JOIN ATTACH A ON(M.MEM_ID = A.TID)
		WHERE
		    M.MEM_ID = #{memId}
	</select>
	
	
	
	
	
	
	
	
	
	<!-- member 테이블 insert -->
	<insert id="memberInsert" parameterType="memberVO">
		INSERT INTO MEMBER2(USER_ID, PASSWORD, COIN, BIRTH, GENDER, 
								NATIONALITY, MARRIAGED, CARS, HOBBY_LIST)
        VALUES(#{userId},#{password},#{coin},#{birth},#{gender}
        				,#{nationality},#{marriaged},#{car},#{hobby})
	</insert>
	
	<!-- address 테이블 insert -->
	<insert id="addressInsert" parameterType="memberVO">
		INSERT INTO ADDRESS(USER_ID, POST_CODE, ADDRESS, ADDRESS_DETAIL)
            VALUES(#{userId},#{addressVO.postCode},#{addressVO.address},#{addressVO.addressDetail})
	</insert>
	
	<!-- memberVO : cardVOList = 1 : N 
		CARD 테이블에 insert
		List<CardVO> cardVOList = memberVO.getCardVOList();
	-->
	<update id="insertCard" parameterType="java.util.List">
		<foreach collection="list" item="cardVO" open="INSERT ALL "
			close="SELECT * FROM SYS.DUAL" separator=" ">
			INTO CARD VALUES(#{cardVO.userId}, #{cardVO.no}, #{cardVO.validMonth})
		</foreach>
	</update>
	

	
</mapper>